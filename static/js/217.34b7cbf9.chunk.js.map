{"version":3,"file":"static/js/217.34b7cbf9.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/contactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWrapper = styled.div`\n  width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  text-transform: uppercase;\n  font-weight: 700;\n  padding: 40px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerWrapper, Title } from './Container.styled';\n\nexport const Container = ({ children, title }) => {\n  return (\n    <ContainerWrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </ContainerWrapper>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 700;\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 800px;\n  padding: 5px 10px;\n\n  font-size: 14px;\n  color: #000;\n\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n\n  :focus {\n    border-color: rgb(60, 120, 100);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 15px;\n  height: 50px;\n  width: 200px;\n  font-weight: 500;\n\n  font-size: 24px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n","const getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getIsLoading = state => state.contacts.isLoading;\nconst getError = state => state.contacts.error;\n\nexport const contactsSelectors = {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n};\n","import { useState } from 'react';\nimport { Label, Title, Input, Button } from './ContactForm.styled';\nimport { Report } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { contactsSelectors } from 'redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const onChangeName = e => setName(e.currentTarget.value);\n  const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Report.warning(\n        `${name}`,\n        'User is already in your contact list.',\n        'OK'\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmitForm}>\n      <Label>\n        <Title>Name</Title>\n        <Input\n          onChange={onChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <Title>Number</Title>\n        <Input\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Icon = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #0ba822;\n  color: #fff;\n\n  margin-right: 30px;\n  padding: 15px;\n`;\n\nexport const Number = styled.p`\n  font-weight: 700;\n  margin-right: 30px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 50px;\n  height: 50px;\n  padding: 0px;\n\n  border: none;\n  background-color: #fff;\n  color: rgb(111, 111, 207);\n\n  cursor: pointer;\n  transition: color 250ms linear;\n\n  :hover,\n  :focus {\n    color: rgb(111, 111, 207);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper, Icon, Number, Button } from './Contact.styled';\nimport { FaUser } from 'react-icons/fa';\nimport { TiDelete } from 'react-icons/ti';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactOperations';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Wrapper>\n        <Icon>\n          <FaUser />\n        </Icon>\n        <p>{name}</p>\n      </Wrapper>\n      <Wrapper>\n        <Number>{number}</Number>\n        <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          <TiDelete size=\"50px\" />\n        </Button>\n      </Wrapper>\n    </>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Contact } from 'components/Contact/Contact';\nimport { Item } from './ContactList.styled';\nimport { contactsSelectors } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContactsList = filteredContacts();\n\n  return (\n    contacts && (\n      <ul>\n        {filteredContactsList.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <Contact name={name} number={number} id={id} />\n            </Item>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  margin: 5px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 800px;\n  padding: 5px 10px;\n\n  font-size: 14px;\n  color: #000;\n\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n\n  :focus {\n    border-color: rgb(60, 120, 100);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { contactsSlice } from 'redux/contacts/contactsSlice';\nimport { Label, Text, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = e =>\n    dispatch(contactsSlice.actions.filteredContact(e.currentTarget.value));\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" onChange={changeFieldFilter} name=\"filter\" />\n    </Label>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Container>\n        <ContactForm />\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["ContainerWrapper","styled","Title","Container","children","title","Label","Input","Button","contactsSelectors","state","contacts","items","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","resetForm","onSubmit","e","preventDefault","newContact","some","contact","toLowerCase","Report","addContact","onChange","currentTarget","value","type","pattern","required","Wrapper","Icon","Number","Contact","id","onClick","deleteContact","size","Item","ContactList","useEffect","fetchContacts","filteredContactsList","normalizedFilter","includes","filteredContacts","map","Text","Filter","contactsSlice","ContactsPage"],"sourceRoot":""}